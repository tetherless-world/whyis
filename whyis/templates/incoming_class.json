{{'''graph ?assertion {
      {
         # Original class hierarchy relationships
         ?source rdfs:subClassOf|owl:equivalentClass ?target.
         ?source ?link_type ?target.
      }
      UNION {
         # SHACL property shapes linking classes: NodeShape -> targetClass
         ?source sh:targetClass ?target.
         ?source ?link_type ?target.
      }
      UNION {
         # SHACL property shapes: PropertyShape with sh:class/sh:node pointing to target
         ?nodeshape sh:property ?source.
         ?source sh:class|sh:node ?target.
         ?source ?link_type ?target.
      }
      UNION {
         # Classes used directly as NodeShapes with property shapes
         ?source rdf:type sh:NodeShape.
         ?source sh:property ?propshape.
         ?propshape sh:class|sh:node ?target.
         ?propshape ?link_type ?target.
         bind(?source as ?source)
      }
    }
    bind(1 as ?probability)
    bind(?assertion as ?link)

    filter(!isLiteral(?target))
    minus { ?source owl:sameAs ?target.}
    minus { ?source rdfs:seeAlso ?target.}
    minus { ?source rdf:type ?target.}
    minus { ?source <http://dbpedia.org/ontology/wikiPageExternalLink> ?target.}
    minus { ?source foaf:depiction ?target.}
    minus { ?source sio:hasPart  ?target.}
    minus { ?source sio:SIO_000028 ?target.}
    minus { ?source sio:hasAttribute ?target.}
    minus { ?source sio:SIO_000008 ?target. }
    minus { ?target a sio:Term.}
    minus { ?target a sio:SIO_000275.}
    filter (!sameTerm(?source, ?target) && isIRI(?target))

    FILTER (!regex(str(?source), "^bnode:"))
''' | probit(target=this.identifier) | tojson }}
